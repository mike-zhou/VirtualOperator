@startuml

participant app
participant stepper_1
participant stepper_2
participant timer
participant encoder_x
participant encoder_y

note over stepper_1 #pink: STEPPER_READY
app -> stepper_1: stepper_set_forward
app -> stepper_1: stepper_run_active
note over stepper_1 #pink: STEPPER_RUNNING_ACTIVE

note over stepper_2 #pink: STEPPER_READY
app -> stepper_2: stepper_set_forward
loop
    app -> stepper_2: stepper_set_passive_step_indexes
end
app -> stepper_1: stepper_couple_passive
note over stepper_2 #pink: STEPPER_RUNNING_PASSIVE


app -> stepper_1: stepper_get_startup_pulse_width
app -> timer: timer_start
loop
    timer -> stepper_1: on_stepper_pulse_end
    activate stepper_1
        stepper_1 -> stepper_2: on_active_stepper_pulse_end
        activate stepper_2
            stepper_2 -> encoder_y: get_encoder
        deactivate stepper_2
        stepper_1 -> encoder_x: get_encoder
    deactivate stepper_1
        alt next pulse width > 0
        timer -> timer: _update_overflow_threshold
    end

end

note over stepper_1 #pink: STEPPER_READY
note over stepper_2 #pink: STEPPER_READY

app -> stepper_1: stepper_decouple_passive

note over stepper_2: restore active pulses
loop
    app -> stepper_2: stepper_set_master_rampup_pulse_width
    activate stepper_2
        alt batchIndex == 0
            stepper_2 -> stepper_2: _reset_active_stepper_pulses
        end
    deactivate stepper_2
end
app -> stepper_2: stepper_set_master_cruise_pulse_width
loop
    app -> stepper_2: stepper_set_master_rampdown_pulse_widths
end

note over stepper_2 #pink: STEPPER_READY

@enduml

